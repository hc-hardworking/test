主题：
    1.目标识别
    2.目标侦测
    3.目标分割
    4.目标跟踪
任务：
    1.图像的卷积处理
    2.使用求导的方法实现梯度下降
    3.实现特征学习
    4.实现卷积神经网络LeNet-5

技术：
    1.向量与图像
    2.张量和自动求导
    3.梯度下降算法
    4.深度学习网络（BP网络）
        4.1掌握集中卷积神经网络
    5.数据集的处理



1.图像的表示与矩阵
    -图像在计算内部的表示：矩阵
        -通过矩阵操作了解图像处理的技术
    -OpenCv中：
        矩阵：cv::Mat

        numpy.ndarray
        numpy.Mat

    安装：
        -OpenCv --|-----numpy.ndarray
        -numpy --|
        pip install numpy
        -----------------------------
        pip install opencv-python
        pip install opencv-contrib-python
        --------------------------------------
        -python类的使用
            1.构造器使用方法
            HWC  --uint8
            图像的深度：
                通道
                每个通道的类型

            2.函数产生对象：工厂模式
        -矩阵的基本操作：
            1.元素访问[]
                1.1 数，数列表
                1.2 切片
                1.3 逻辑值

            2.运算符 

        





2.梯度特征与卷积运算
    图像特征：
        统计特征(直方)
    梯度特征：
        像素的变化：数学建模：一阶导数（sobel），二阶导数（Laplace）
    梯度特征的表示（数学模型）
        卷积核：特征获取的过程=卷积运算
            特征由卷积核决定
            需要的特征：通过学习卷积核得到对分类有帮助的特征。（傅里叶变换）
        机器学习:神经网络：卷积神经网络
            卷积神经网络：卷积特征学习网络+分类网络（逻辑回归）
            1张图-100个1*1小图（每个图一个特征）
            原图-卷积—>特征图-卷积>特征图->分类器 ->误差
        问题：
            怎么根据误差调整卷积核？
                -数学模型
                -梯度下降算法 ->总是收敛的
        注意：
            new_pixel=scale*pixel+delta
            因为pixel经过梯度运算可能很小，所以设计scale，delta进行一个线性运算，使得像素可视




3.张量与数据集（NWIST手写数字数据集）
    1.张量-图>跟踪施加在张量上的运算
    2.张量<->向量


4.自动求导与梯度下降
5.使用Pytroch实现卷积神经网络